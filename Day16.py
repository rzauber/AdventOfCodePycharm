import sys
print(sys.getrecursionlimit())
sys.setrecursionlimit(2500)

input = r"""\.......................|..-.............../../.......|...............\.\.....|..../.............|............
........................../....../..............................-............-.-..--.........-...........\/...
....\............../...........-...-......|.............................\...............-........-....|.......
......\....|................./.\................/..................../.......................|..\......-......
.................../..................-./.................../.....-...................|......\.......|\...\./.
.....|........../....................\../..\.../.\.......-.............\...........\......|.\..-..........-...
..../............/.....\...................../..--\........|......\....-...|.-...../......-........../........
..............\.-............./........./....|\.......\..........|.................|.|.................-......
.....|..........-................-.../..........-........................\.......|.........................-..
.|.-......./....................\........-.............../..\.|.-\...........\./.................-............
................|/............................../..-.\..................-..../../...../.../..../..........|...
........................./.....................\..\....-....../-.....................\|.........././.-........
...\.....................-...../|............--......-..|...../.....|......|.../.\....|.............\|.......\
.........-...-.....|.........../...-/........|......./|............-.......-.....\.............\|....../......
.....|...|.................|...../.............|.................../..........\|..\......|..|....-............
...........................-.........\......\.............\...................-.....-.\.......-.....|.........
.................-.............-......./.............-..\./......|....-..-..........-....-............\.......
.\..\.......-......|........................\.............-.......................|.........|\.|..\......--/..
..........-.....||--........|........-....../...........|../...-.........../.....-.\..........|.......-.......
..........\..........|..................\.................-..../............/..........|.......-........../...
..--......../..........-..|........./.........-...../........-.................|..\............../.....-......
.....\.............|...../......../............./||..........................\............|...................
..-.................-|..-....................\.................|...\.....\............./......-.......\.......
............-../......\...../.-....-.....-....-./../......\..|..|............................|.../..|.........
-................./................................................|...............|....|.....-.....|....../..
...........-...................|...........\.......-..\.......-...........|..-....../........|...............|
.........|...|-........../...-..........|.........\.....||......./....|...............\......-......\...../...
....|.........|............\.-.......................................-.......................|.-..|.\...\.-...
.|....|....-/....................\\..........................|........\|...|..............\..|......-.\../....
..|.\......|..../.....|.......-....................|.\..\............/......................|.....\../../.....
.......|\\.\/......................./.............|................../.........|.....\-.......................
......................................../.../................\-..............-................./......\.......
............../............/\......./........................./......|............\/..........................
......./................|......../.........-............\.../.|....../....|...../..../......../...............
...................|............-\........../...\.......\....\.....-.........-./....|.........................
.....-..-\.................|\...........................|..........\........-...|.............................
..............................-.............-.......\......................../.......\|.......|...-....-......
\...................\..../.................\................|......-...-............./.-......................
........................./.|./...|..\.-............|.-.....-..........\....-..../.....|.......|...............
.................../......../..................|.|...............|.......|\.....|......|...............\/..|..
.........|....-......../........-./..|.../..|./...................-........|..................................
..|../............-......-.........................-..|....-................-..\....../...........|...........
....................-...............|.../.....|..../......../...|.......\.....-.....\..............-..\.-.....
...........\.........../............................................\......-................-.......|.....-...
..-............./.......-\...........|-..-../............../................................../...............
.................\.......\............../.|.......-...\............................................\.-........
.\....|....\......|........./.....--......................................|................\..|-..............
......../...............-..........................|...........................-.............-\.-..|..........
.......|......|/...\........./......../.....\.........\.......................-...........\..\................
.-..-../.............|................./../.................\........-......|.\.....||...................\|...
/......../....\.....|-..........\..............-.....|............/\......\...//....................\...-/....
................-...........-.-\-..........\.-./......../-................./../.\........................./...
-.........-.....|.....-..|..|.........|...................-..........\/.-.....................................
......./...../......\............-.|...............|..../.........|....\.................../..............|...
...........|.......|....|...............\........................\/..\......................................\.
......\........-.........................\..........\.............\......................\/.....\..|..........
......\...........|.........../..-............./........................../...-......../...............\..|...
..|............\../........../............\...|.......................-...............\-../.|...|\.....\......
.|....\.|....-|.........\......./.................../.|........|....../.--.\.....\..............-\\.........-.
......................./.......\...........|.\............-.....\.............\.........--......../.\..-.|../.
......../.............../......\.\....|.............../...........................-........-......../.........
.......|\.............|.../|/........../....\.....-....|.............-......./........\..\........\..|......-.
.............../...........-.....\..\....-...../...|......\...........................\...|...........|/......
.............|....../.................../..|.....................|.......|....//..............\...............
......./....\............................-.........................-/......../|......-....|.............../...
...........................|...................\...............................-.................|...........\
.............................-......./..../...................\.../...........-.|......................||.....
\....\....\...-./......../.........\................./................\...................|...........-.......
................-.../............/\..................\.\..-....../................./..........|...............
......../...\.......................\.......\..\......|.....|../..........\..........-.............|..........
../.........................................-\..........-.........|-./.....-...|..|.......\........-...../../.
.....|..........-......../|-..............|.................-...........|...\.....................\...........
.......|..............\....\.....-............../..\\..\.......-........./.........-..|...|................../
..........-.......-.-................../.........\\...../.....|..........\......./.|.............-...........\
..................................-..................|...........\../\...../..../...\................/........
...-.........................................................\.|..............\..................\............
-.|..|...................../../.|.......\.....|.....\.\...\.........-.................................../.....
...\./....../........\.......-.................\.........|............-.........../...........\.|.........|.\.
..........-...\.............-.-............-.-................/.....................|........|............-...
|......./............/..|..............\...............|.......|\................/....|.........|.........\..\
.....\../\./.....................-.............\..................|.|.........................................
............/......../.../.......\............/.........................\........................\............
....../..|.............../....................-.......\................................................|.....\
................................../.......././.......\.....|.\......-.........-..||......../........-.//......
........................\.......|............-....-...../..............................-............-....|...-
.....-.......|......\..|.........-....|......\......../..../.......\..........|....\.............||..\........
..........|...........-|.......\.......-....../...../..........||.......................\............-..|.....
.................../../..............................|....|................/........|-....|................/..
.....................\................/............................/-........./...|.............\...|..|\.....
.....\..\..........\......../......|.........-....-..-..|...........\....|./....\.\..\............../.........
.......-...............-....../...........-.......................|../...............|...|.........../..../...
.............|.../..................\..\..........-........||................\/...........-|..................
.............-..............-\.../.................|......\...../..........\...-.....-....../................\
.....-....................................-.........\/............../.............................|...........
./.|../......\\..........................................|..............\|/..-\..........................\....
...........-.........\............./....-........-....-....-.........\..\....-\...-...............--.........-
..\.............................\............................./\..........-.............-...-./........../....
.................../........\....|..-....|||./..............-......-./....................../..|...|..........
......\.........../............|\...|.-................../....................|\..|..\.............-./......|.
...........-...................-.|........................\...............|/..-...\...|/\...........|.........
............|..../..................................\.......................\........................-........
.\..........................|......|......../.|....................../.......\......\.............../.........
..........-.../............/..........................|....-......................|.-................|.-......
......../............-...|.....|......../-.....-|...|./.......-..................-\...........................
...............\.\/.-....././................-.../..../.............../-|.....-.......|......./..--...........
..........-\\.|-................./../..|.-.....--................../.................../.|.......-............
..\.................-..............-...............\.....|......................./..\.....--........./..../..\
.......-....../..............|..................\....|..|..........-.....|.|.-.........................\......
..../..\...\....................................||.|......................................|.......\/.........-
................\-.-.....||....\.........................-...................................................|"""

example_input = r""".|...\....
|.-.\.....
.....|-...
........|.
..........
.........\
..../.\\..
.-.-/..|..
.|....-|.\
..//.|...."""

current_input = input

class Node:
  def __init__(self, char, x, y):
    self.char = char
    self.x = x
    self.y = y
    self.energized = False

  def getNorth(self):
    return ('N', self.x, self.y - 1)

  def getSouth(self):
    return ('S', self.x, self.y + 1)

  def getEast(self):
    return ('E', self.x+1, self.y)

  def getWest(self):
    return ('W', self.x-1, self.y)

  def traverseAsNormal(self, beamDirection):
    if beamDirection == 'N':
      return [self.getNorth()]
    elif beamDirection == 'S':
      return [self.getSouth()]
    elif beamDirection == 'E':
      return [self.getEast()]
    elif beamDirection == 'W':
      return [self.getWest()]

  def traverse(self, beamDirection):
    self.energized = True
    if self.char == '.':
      return self.traverseAsNormal(beamDirection)
    elif self.char == '/':
      if beamDirection == 'N':
        return [self.getEast()]
      elif beamDirection == 'S':
        return [self.getWest()]
      elif beamDirection == 'E':
        return [self.getNorth()]
      elif beamDirection == 'W':
        return [self.getSouth()]
    elif self.char == "\\":
      if beamDirection == 'N':
        return [self.getWest()]
      elif beamDirection == 'S':
        return [self.getEast()]
      elif beamDirection == 'E':
        return [self.getSouth()]
      elif beamDirection == 'W':
        return [self.getNorth()]
    elif self.char == '|':
      if beamDirection == 'N':
        return self.traverseAsNormal(beamDirection)
      elif beamDirection == 'S':
        return self.traverseAsNormal(beamDirection)
      elif beamDirection == 'E':
        return [self.getNorth(), self.getSouth()]
      elif beamDirection == 'W':
        return [self.getNorth(), self.getSouth()]
    elif self.char == '-':
      if beamDirection == 'N':
        return [self.getWest(), self.getEast()]
      elif beamDirection == 'S':
        return [self.getWest(), self.getEast()]
      elif beamDirection == 'E':
        return self.traverseAsNormal(beamDirection)
      elif beamDirection == 'W':
        return self.traverseAsNormal(beamDirection)
    else:
      print('Weird char: ' + self.char)

nodes = []
for y, line in enumerate(current_input.splitlines()):
  nodeLine = []
  for x, char in enumerate(line):
    nodeLine.append(Node(char, x, y))
  nodes.append(nodeLine)


def move(beamDirection, x, y, visited):
  current_node = nodes[y][x]
  current_direction = beamDirection
  while True:
    if (current_direction, current_node.x, current_node.y) in visited:
      break
    visited.add((current_direction,current_node.x,current_node.y))
    #print(beamDirection, ',', current_node.x, ',', current_node.y, '     ' + current_node.char)
    outputs = current_node.traverse(current_direction)
    if len(outputs) == 2:
      (out2dir, out2x, out2y) = outputs[1]
      if 0 <= out2x < len(nodes) and 0 <= out2y < len(nodes[0]):
        move(out2dir, out2x, out2y, visited)
    (out1dir, out1x, out1y) = outputs[0]
    if not (0 <= out1x < len(nodes) and 0 <= out1y < len(nodes[0])):
      break
    current_node = nodes[out1y][out1x]
    current_direction = out1dir
    #for (outDirection, outX, outY) in outputs:
    #  if (outDirection, outX, outY) not in visited:
    #    if 0 <= outY < len(nodes) and 0 <= outX < len(nodes[0]):
    #      move(outDirection, outX, outY, visited)

move('E', 0, 0, set())

def getTotalEnergized():
  total = 0
  for nodeLine in nodes:
    for node in nodeLine:
      if node.energized:
        total += 1
  return total


print(getTotalEnergized())

# Part 2
def resetNodes():
  for nodeLine in nodes:
    for node in nodeLine:
      node.energized = False

maxStartingPos = None
maxFound = 0
for y, nodeLine in enumerate(nodes):
  for x, node in enumerate(nodeLine):
    if x == 0:
      print('Starting E at ', x, ',', y)
      move('E', x, y, set())
      count = getTotalEnergized()
      print('count', count)
      if count > maxFound:
        maxFound = count
        maxStartingPos = ('E', x, y)
      resetNodes()
    if x == len(nodeLine) - 1:
      move('W', x, y, set())
      count = getTotalEnergized()
      if count > maxFound:
        maxFound = count
        maxStartingPos = ('W', x, y)
      resetNodes()
    if y == 0:
      print('Starting S at ', x, ',', y)
      move('S', x, y, set())
      count = getTotalEnergized()
      print('count', count)
      if count > maxFound:
        maxFound = count
        maxStartingPos = ('S', x, y)
      resetNodes()
    if y == len(nodes) - 1:
      move('N', x, y, set())
      count = getTotalEnergized()
      if count > maxFound:
        maxFound = count
        maxStartingPos = ('N', x, y)
      resetNodes()
print(maxFound)